{"version":3,"sources":["components/Wrapper/index.js","components/Container/index.js","components/Nav/index.js","components/Title/index.js","components/Row/index.js","components/Column/index.js","components/CharacterCards/index.js","App.js","index.js"],"names":["Wrapper","props","className","children","container","fluid","Nav","href","title","id","rightWrong","score","topScore","Title","Row","column","size","split","map","join","TVShowCard","value","onClick","handleClick","alt","name","src","image","shufflechar","array","i","length","j","Math","floor","random","App","state","char","clicked","indexOf","handleIncrement","setState","concat","handleReset","newScore","handleShuffle","shuffledchar","this","Container","show","Column","Component","ReactDOM","render","document","getElementById"],"mappings":"08BAKeA,G,YAFC,SAAAC,GAAK,OAAI,qBAAKC,UAAU,UAAf,SAA0BD,EAAME,aCI1CC,EALG,SAAAH,GAAK,OACrB,qBAAKC,UAAS,mBAAcD,EAAMI,MAAQ,SAAW,IAArD,SACGJ,EAAME,YCeIG,G,MAhBH,SAAAL,GAAK,OACf,8BACE,+BACE,oBAAIC,UAAU,mBAAd,SACE,mBAAGK,KAAK,gBAAR,SAAyBN,EAAMO,UAGjC,oBAAIC,GAAG,KAAP,SAAaR,EAAMS,aAEnB,qBAAID,GAAG,UAAP,oBAAyBR,EAAMU,SAE/B,qBAAIF,GAAG,UAAP,mBAAwBR,EAAMW,mBCTrBC,G,MAFD,SAAAZ,GAAK,OAAI,oBAAIC,UAAU,QAAd,SAAuBD,EAAME,aCIrCW,EALH,SAAAb,GAAK,OACf,qBAAKC,UAAS,aAAQD,EAAMI,MAAQ,SAAW,IAA/C,SACGJ,EAAME,YCOIY,EATA,SAAAd,GACb,IAAMe,EAAOf,EAAMe,KAAKC,MAAM,KAAKC,KAAI,SAAAF,GAAI,MAAI,OAASA,KAAMG,KAAK,KACnE,OACE,qBAAKjB,UAAWc,EAAhB,SACGf,EAAME,Y,OCSEiB,G,MAZI,SAAAnB,GAAK,OACtB,qBACEC,UAAU,OACVmB,MAAOpB,EAAMQ,GACba,QAAS,kBAAMrB,EAAMsB,YAAYtB,EAAMQ,KAHzC,SAKE,qBAAKP,UAAU,gBAAf,SACE,qBAAKsB,IAAKvB,EAAMwB,KAAMC,IAAKzB,EAAM0B,cCCvC,SAASC,EAAYC,GACnB,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADC,EAElB,CAACD,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAFkC,KAE9BD,EAAMG,GAFwB,KAI3C,OAAOH,E,IA0FMO,E,4MArFbC,MAAQ,CACNC,OACA3B,MAAO,EACPC,SAAU,EACVF,WAAY,GACZ6B,QAAS,I,EAGXhB,YAAc,SAAAd,IAC4B,IAApC,EAAK4B,MAAME,QAAQC,QAAQ/B,IAC7B,EAAKgC,kBACL,EAAKC,SAAS,CAAEH,QAAS,EAAKF,MAAME,QAAQI,OAAOlC,MAEnD,EAAKmC,e,EAITH,gBAAkB,WAChB,IAAMI,EAAW,EAAKR,MAAM1B,MAAQ,EACpC,EAAK+B,SAAS,CACZ/B,MAAOkC,EACPnC,WAAY,KAEVmC,GAAY,EAAKR,MAAMzB,SACzB,EAAK8B,SAAS,CAAE9B,SAAUiC,IAEN,KAAbA,GACP,EAAKH,SAAS,CAAEhC,WAAY,gBAE9B,EAAKoC,iB,EAKPF,YAAc,WACZ,EAAKF,SAAS,CACZ/B,MAAO,EACPC,SAAU,EAAKyB,MAAMzB,SACrBF,WAAY,aACZ6B,QAAS,KAEX,EAAKO,iB,EAGPA,cAAgB,WACd,IAAIC,EAAenB,EAAYU,GAC/B,EAAKI,SAAS,CAAEJ,KAAMS,K,uDAGd,IAAD,OACP,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CACEvC,MAAM,aACNG,MAAOqC,KAAKX,MAAM1B,MAClBC,SAAUoC,KAAKX,MAAMzB,SACrBF,WAAYsC,KAAKX,MAAM3B,aAGzB,cAAC,EAAD,gGAIA,cAACuC,EAAD,UACE,cAAC,EAAD,UACGD,KAAKX,MAAMC,KAAKpB,KAAI,SAAAgC,GAAI,OACvB,cAACC,EAAD,CAAQnC,KAAK,YAAb,SACE,cAAC,EAAD,CAEEO,YAAa,EAAKA,YAClBkB,gBAAiB,EAAKA,gBACtBG,YAAa,EAAKA,YAClBE,cAAe,EAAKA,cACpBrC,GAAIyC,EAAKzC,GACTkB,MAAOuB,EAAKvB,OANPuB,EAAKzC,oB,GAtEV2C,aCdlBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f6b0cc49.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;","import React from \"react\";\n\nconst container = props =>\n  <div className={`container${props.fluid ? \"-fluid\" : \"\"}`}>\n    {props.children}\n  </div>;\n\nexport default container;","import React from \"react\";\nimport \"./nav.css\";\n\nconst Nav = props => (\n  <nav>\n    <ul>\n      <li className=\"animated tv show\">\n        <a href=\"/clicky-game/\">{props.title}</a>\n      </li>\n\n      <li id=\"rw\">{props.rightWrong}</li>\n\n      <li id=\"cur-sco\">Score: {props.score}</li>\n\n      <li id=\"top-sco\">Best: {props.topScore}</li>\n    </ul>\n  </nav>\n);\n\nexport default Nav;","import React from \"react\";\nimport \"./Title.css\";\n\nconst Title = props => <h1 className=\"title\">{props.children}</h1>;\n\nexport default Title;","import React from \"react\";\n\nconst Row = props =>\n  <div className={`row${props.fluid ? \"-fluid\" : \"\"}`}>\n    {props.children}\n  </div>;\n\nexport default Row;","import React from \"react\";\n\nconst column = props => {\n  const size = props.size.split(\" \").map(size => \"col-\" + size).join(\" \");\n  return (\n    <div className={size}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default column;","import React from \"react\";\nimport \"./CharacterCards.css\";\n\nconst TVShowCard = props => (\n  <div \n    className=\"card\" \n    value={props.id} \n    onClick={() => props.handleClick(props.id)}\n  >\n    <div className=\"img-container\">\n      <img alt={props.name} src={props.image} />\n    </div>\n  </div>\n);\n\nexport default TVShowCard;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Wrapper from \"./components/Wrapper\";\nimport Container from \"./components/Container\";\nimport Nav from \"./components/Nav\";\nimport Title from \"./components/Title\";\nimport Row from \"./components/Row\";\nimport Column from \"./components/Column\";\nimport char from \"./characters.json\";\nimport CharacterCards from \"./components/CharacterCards\";\n\nfunction shufflechar(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n};\n\nclass App extends Component {\n\n  state = {\n    char,\n    score: 0,\n    topScore: 0,\n    rightWrong: \"\",\n    clicked: [],\n  };\n\n  handleClick = id => {\n    if (this.state.clicked.indexOf(id) === -1) {\n      this.handleIncrement();\n      this.setState({ clicked: this.state.clicked.concat(id) });\n    } else {\n      this.handleReset();\n    }\n  };\n\n  handleIncrement = () => {\n    const newScore = this.state.score + 1;\n    this.setState({\n      score: newScore,\n      rightWrong: \"\"\n    });\n    if (newScore >= this.state.topScore) {\n      this.setState({ topScore: newScore });\n    }\n    else if (newScore === 12) {\n      this.setState({ rightWrong: \"You Got It!\" });\n    }\n    this.handleShuffle();\n\n    \n  };\n\n  handleReset = () => {\n    this.setState({\n      score: 0,\n      topScore: this.state.topScore,\n      rightWrong: \"Try Again!\",\n      clicked: []\n    });\n    this.handleShuffle();\n  };\n\n  handleShuffle = () => {\n    let shuffledchar = shufflechar(char);\n    this.setState({ char: shuffledchar });\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <Nav\n          title=\"The Office\"\n          score={this.state.score}\n          topScore={this.state.topScore}\n          rightWrong={this.state.rightWrong}\n        />\n\n        <Title>\n        The Office characters clicky game. hint: Do not click on the same character twice\n        </Title>\n\n        <Container>\n          <Row>\n            {this.state.char.map(show => (\n              <Column size=\"md-3 sm-6\">\n                <CharacterCards\n                  key={show.id}\n                  handleClick={this.handleClick}\n                  handleIncrement={this.handleIncrement}\n                  handleReset={this.handleReset}\n                  handleShuffle={this.handleShuffle}\n                  id={show.id}\n                  image={show.image}\n                />\n              </Column>\n            ))}\n          </Row>\n        </Container>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}